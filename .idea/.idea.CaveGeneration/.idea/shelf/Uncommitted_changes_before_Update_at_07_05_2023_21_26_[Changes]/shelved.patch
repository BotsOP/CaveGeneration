Index: Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class CaveGeneratorManager : MonoBehaviour\r\n{\r\n    [SerializeField] private Transform playerTransform;\r\n    [SerializeField] private GameObject meshContainer;\r\n    [SerializeField] private int chunkSize;\r\n    [SerializeField, Range(0.01f, 1)] private float isoLevel;\r\n    [SerializeField, Range(0.01f, 1)] private float noiseScale;\r\n    [SerializeField, Range(1, 32)] private float carveSize;\r\n    [SerializeField, Range(1, 32)] private int amountChunksHorizontal;\r\n    [SerializeField, Range(1, 32)] private int amountChunksVertical;\r\n    [SerializeField, Range(0.1f, 1)] private float caveScale;\r\n    [SerializeField] private Transform[] originPoints;\r\n    [SerializeField] private Transform[] spheresPos;\r\n    public Transform sphere;\r\n    private CaveChunk[,,] chunks;\r\n    private CavePhysicsManager physicsManager;\r\n    private CaveTerrainCarver terrainCarver;\r\n    private Vector3[] caveBounds;\r\n    private float caveWidth;\r\n    private int stepSize;\r\n\r\n    private float NoiseScale => noiseScale / caveScale;\r\n\r\n    private void Start()\r\n    {\r\n        stepSize = (int)(chunkSize * caveScale) - 1;\r\n        \r\n        caveWidth = amountChunksHorizontal * stepSize;\r\n\r\n        caveBounds = new Vector3[2];\r\n        caveBounds[0] = new Vector3(0, 0, 0);\r\n        caveBounds[1] = new Vector3(caveWidth, amountChunksVertical * stepSize, caveWidth);\r\n        \r\n        chunks = new CaveChunk[amountChunksHorizontal, amountChunksVertical, amountChunksHorizontal];\r\n        physicsManager = new CavePhysicsManager(chunks, caveBounds, amountChunksHorizontal, amountChunksVertical);\r\n        terrainCarver = new CaveTerrainCarver(chunks, caveBounds, amountChunksHorizontal, amountChunksVertical, chunkSize);\r\n\r\n        for (int i = 0; i < chunks.GetLength(0); i++)\r\n        {\r\n            for (int j = 0; j < chunks.GetLength(1); j++)\r\n            {\r\n                for (int k = 0; k < chunks.GetLength(2); k++)\r\n                {\r\n                    Vector3 index = new Vector3(i, j, k);\r\n                    Vector3 pos = index * stepSize;\r\n                    GameObject meshObject = Instantiate(meshContainer, pos, Quaternion.identity, transform);\r\n                    chunks[(int)index.x, (int)index.y, (int)index.z] = new CaveChunk(chunkSize * caveScale, pos, isoLevel, NoiseScale, meshObject);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void OnDisable()\r\n    {\r\n        for (int i = 0; i < chunks.GetLength(0); i++)\r\n        {\r\n            for (int j = 0; j < chunks.GetLength(1); j++)\r\n            {\r\n                for (int k = 0; k < chunks.GetLength(2); k++)\r\n                {\r\n                    if (ReferenceEquals(chunks[i, j, k], null))\r\n                        continue;\r\n                        \r\n                    chunks[i, j, k].OnDestroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void Update()\r\n    {\r\n        if (Input.GetKeyDown(KeyCode.B))\r\n        {\r\n            for (int i = 0; i < chunks.GetLength(0); i++)\r\n            {\r\n                for (int j = 0; j < chunks.GetLength(1); j++)\r\n                {\r\n                    for (int k = 0; k < chunks.GetLength(2); k++)\r\n                    {\r\n                        if (ReferenceEquals(chunks[i, j, k], null))\r\n                            continue;\r\n                        \r\n                        chunks[i, j, k].GenerateMesh(isoLevel);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        Vector3 playerChunkIndex = GetChunkIndex(playerTransform.position);\r\n        PlaceChunksAroundPlayer(playerChunkIndex);\r\n        \r\n        if (Input.GetKeyDown(KeyCode.C))\r\n        {\r\n            AddChunksLeft();\r\n        }\r\n        if (Input.GetKeyDown(KeyCode.V))\r\n        {\r\n            AddChunksRight();\r\n        }\r\n        if (Input.GetKeyDown(KeyCode.X))\r\n        {\r\n            AddChunksForward();\r\n        }\r\n        if (Input.GetKeyDown(KeyCode.Z))\r\n        {\r\n            AddChunksBackward();\r\n        }\r\n\r\n        List<Ray> rays = new List<Ray>();\r\n        for (int i = 0; i < originPoints.Length; i++)\r\n        {\r\n            Ray ray = new Ray(originPoints[i].position, Vector3.down * 100, i);\r\n            rays.Add(ray);\r\n        }\r\n        Vector3[] points = physicsManager.Raycast(rays);\r\n        for (int i = 0; i < originPoints.Length; i++)\r\n        {\r\n            spheresPos[i].position = points[i];\r\n        }\r\n\r\n        Vector3 point = physicsManager.Raycast(playerTransform.position, playerTransform.forward * 1000);\r\n        Debug.DrawRay(playerTransform.position, playerTransform.forward * 1000);\r\n        sphere.position = point;\r\n        if (Input.GetMouseButton(0))\r\n        {\r\n            terrainCarver.RemoveTerrain(point, carveSize);\r\n        }\r\n        if (Input.GetKeyDown(KeyCode.LeftControl))\r\n        {\r\n            terrainCarver.FillTerrain(point, carveSize);\r\n        }\r\n        \r\n        // Vector4 sphereGPU = new Vector4(sphere.position.x, sphere.position.y, sphere.position.z, sphere.lossyScale.x / 2);\r\n        // Debug.Log(GPUPhysics.AreColliding(chunks[0][0][0].vertexBuffer, chunks[0][0][0].indexBuffer, chunks[0][0][0].chunkPosition, sphereGPU));\r\n        \r\n    }\r\n    private void PlaceChunksAroundPlayer(Vector3 playerChunkIndex)\r\n    {\r\n        if (Mathf.Abs(playerChunkIndex.x - amountChunksHorizontal / 2f) > 1)\r\n        {\r\n            if (playerChunkIndex.x < amountChunksHorizontal / 2f)\r\n            {\r\n                AddChunksLeft();\r\n                Debug.Log($\"shifted chunks left\");\r\n                return;\r\n            }\r\n            Debug.Log($\"shifted chunks right\");\r\n            AddChunksRight();\r\n        }\r\n        if (Mathf.Abs(playerChunkIndex.z - amountChunksHorizontal / 2f) > 1)\r\n        {\r\n            if (playerChunkIndex.z < amountChunksHorizontal / 2f)\r\n            {\r\n                AddChunksBackward();\r\n                Debug.Log($\"shifted chunks backward\");\r\n                return;\r\n            }\r\n            Debug.Log($\"shifted chunks forward\");\r\n            AddChunksForward();\r\n        }\r\n    }\r\n\r\n    private Vector3 GetChunkIndex(Vector3 _playerPos)\r\n    {\r\n        return _playerPos.Remap(caveBounds[0], caveBounds[1], Vector3.zero, \r\n                                new Vector3(amountChunksHorizontal, amountChunksVertical, amountChunksHorizontal));\r\n    }\r\n\r\n    #region AddChunks\r\n\r\n    private void AddChunksLeft()\r\n    {\r\n        caveBounds[0].x -= stepSize;\r\n        caveBounds[1].x -= stepSize;\r\n        Stack<GameObject> discardedObjects = new Stack<GameObject>();\r\n        Stack<MeshFilter> discardedMeshFilters = new Stack<MeshFilter>();\r\n        \r\n        for (int i = chunks.GetLength(0) - 1; i >= 0; i--)\r\n        {\r\n            for (int j = chunks.GetLength(1) - 1; j >= 0; j--)\r\n            {\r\n                for (int k = chunks.GetLength(2) - 1; k >= 0; k--)\r\n                {\r\n                    if (i == 0)\r\n                    {\r\n                        Vector3 index = new Vector3(i, j, k);\r\n                        Vector3 pos = chunks[i, j, k].chunkPosition;\r\n                        pos.x -= stepSize;\r\n                        \r\n                        discardedObjects.Peek().transform.position = pos;\r\n                        \r\n                        chunks[(int)index.x, (int)index.y, (int)index.z] = new CaveChunk(chunkSize * caveScale, pos, isoLevel, NoiseScale, \r\n                                                                                             discardedObjects.Pop(), discardedMeshFilters.Pop());\r\n                    }\r\n                    else\r\n                    {\r\n                        if (i == chunks.GetLength(0) - 1)\r\n                        {\r\n                            discardedObjects.Push(chunks[i, j, k].gameObject);\r\n                            discardedMeshFilters.Push(chunks[i, j, k].meshFilter);\r\n                            chunks[i, j, k].OnDestroy();\r\n                        }\r\n                        chunks[i, j, k] = chunks[i - 1, j, k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void AddChunksRight()\r\n    {\r\n        caveBounds[0].x += stepSize;\r\n        caveBounds[1].x += stepSize;\r\n        Stack<GameObject> discardedObjects = new Stack<GameObject>();\r\n        Stack<MeshFilter> discardedMeshFilters = new Stack<MeshFilter>();\r\n        \r\n        for (int i = 0; i < chunks.GetLength(0); i++)\r\n        {\r\n            for (int j = 0; j < chunks.GetLength(1); j++)\r\n            {\r\n                for (int k = 0; k < chunks.GetLength(2); k++)\r\n                {\r\n                    if (i == chunks.GetLength(0) - 1)\r\n                    {\r\n                        Vector3 index = new Vector3(i, j, k);\r\n                        Vector3 pos = chunks[i, j, k].chunkPosition;\r\n                        pos.x += stepSize;\r\n                        \r\n                        discardedObjects.Peek().transform.position = pos;\r\n                        \r\n                        chunks[(int)index.x, (int)index.y, (int)index.z] = new CaveChunk(chunkSize * caveScale, pos, isoLevel, NoiseScale, \r\n                                                                                             discardedObjects.Pop(), discardedMeshFilters.Pop());\r\n                    }\r\n                    else\r\n                    {\r\n                        if (i == 0)\r\n                        {\r\n                            discardedObjects.Push(chunks[i, j, k].gameObject);\r\n                            discardedMeshFilters.Push(chunks[i, j, k].meshFilter);\r\n                            chunks[i, j, k].OnDestroy();\r\n                        }\r\n                        chunks[i, j, k] = chunks[i + 1, j, k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    private void AddChunksForward()\r\n    {\r\n        caveBounds[0].z += stepSize;\r\n        caveBounds[1].z += stepSize;\r\n        Stack<GameObject> discardedObjects = new Stack<GameObject>();\r\n        Stack<MeshFilter> discardedMeshFilters = new Stack<MeshFilter>();\r\n        \r\n        for (int i = 0; i < chunks.GetLength(0); i++)\r\n        {\r\n            for (int j = 0; j < chunks.GetLength(1); j++)\r\n            {\r\n                for (int k = 0; k < chunks.GetLength(2); k++)\r\n                {\r\n                    if (k == chunks.GetLength(0) - 1)\r\n                    {\r\n                        Vector3 index = new Vector3(i, j, k);\r\n                        Vector3 pos = chunks[i, j, k].chunkPosition;\r\n                        pos.z += stepSize;\r\n                        \r\n                        discardedObjects.Peek().transform.position = pos;\r\n                        \r\n                        chunks[(int)index.x, (int)index.y, (int)index.z] = new CaveChunk(chunkSize * caveScale, pos, isoLevel, NoiseScale, \r\n                                                                                             discardedObjects.Pop(), discardedMeshFilters.Pop());\r\n                    }\r\n                    else\r\n                    {\r\n                        if (k == 0)\r\n                        {\r\n                            discardedObjects.Push(chunks[i, j, k].gameObject);\r\n                            discardedMeshFilters.Push(chunks[i, j, k].meshFilter);\r\n                            chunks[i, j, k].OnDestroy();\r\n                        }\r\n                        chunks[i, j, k] = chunks[i, j, k + 1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void AddChunksBackward()\r\n    {\r\n        caveBounds[0].z -= stepSize;\r\n        caveBounds[1].z -= stepSize;\r\n        Stack<GameObject> discardedObjects = new Stack<GameObject>();\r\n        Stack<MeshFilter> discardedMeshFilters = new Stack<MeshFilter>();\r\n\r\n        for (int i = chunks.GetLength(0) - 1; i >= 0; i--)\r\n        {\r\n            for (int j = chunks.GetLength(1) - 1; j >= 0; j--)\r\n            {\r\n                for (int k = chunks.GetLength(2) - 1; k >= 0; k--)\r\n                {\r\n                    if (k == 0)\r\n                    {\r\n                        Vector3 index = new Vector3(i, j, k);\r\n                        Vector3 pos = chunks[i, j, k].chunkPosition;\r\n                        pos.z -= stepSize;\r\n\r\n                        discardedObjects.Peek().transform.position = pos;\r\n                        \r\n                        chunks[(int)index.x, (int)index.y, (int)index.z] = new CaveChunk(chunkSize * caveScale, pos, isoLevel, NoiseScale, \r\n                                                                                             discardedObjects.Pop(), discardedMeshFilters.Pop());\r\n                    }\r\n                    else\r\n                    {\r\n                        if (k == chunks.GetLength(0) - 1)\r\n                        {\r\n                            discardedObjects.Push(chunks[i, j, k].gameObject);\r\n                            discardedMeshFilters.Push(chunks[i, j, k].meshFilter);\r\n                            chunks[i, j, k].OnDestroy();\r\n                        }\r\n                        chunks[i, j, k] = chunks[i, j, k - 1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #endregion\r\n}\r\n\r\npublic struct Ray\r\n{\r\n    public Vector3 origin;\r\n    public Vector3 direction;\r\n    public int index;\r\n\r\n    public Ray(Vector3 _origin, Vector3 _direction, int _index)\r\n    {\r\n        origin = _origin;\r\n        direction = _direction;\r\n        index = _index;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs b/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs
--- a/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs	(revision d1866627d6abfc98119f6723d76e09ababb83f24)
+++ b/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs	(date 1683384520745)
@@ -75,6 +75,7 @@
 
     private void Update()
     {
+        Debug.Log(Mathf.Abs( Time.time % 10 - 5f) );
         if (Input.GetKeyDown(KeyCode.B))
         {
             for (int i = 0; i < chunks.GetLength(0); i++)
Index: .idea/.idea.CaveGeneration/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3b950575-0ebb-40b1-b163-92127e3e1ccf\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_03_05_2023_15_34__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_03_05_2023_15_34__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_04_05_2023_10_53__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_04_05_2023_10_53__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scenes/SampleScene.unity\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scenes/SampleScene.unity\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scripts/GPUPhysics/GPUPhysics.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scripts/GPUPhysics/GPUPhysics.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scripts/Resources/GPUPhysicsShader.compute\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scripts/Resources/GPUPhysicsShader.compute\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Assets/Scripts/Resources/SDFCarver.compute\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Assets/Scripts/Resources/SDFCarver.compute\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/../BetterDisintegration/Assets/Scripts/Library/MeshExtensions.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveTerrainCarver.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/ExtensionMethods.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/Resources/CaveGeneration.compute\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/Resources/GPUPhysicsShader.compute\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/Resources/Includes/Noise.compute\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Assets/Scripts/Resources/SDFCarver.compute\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/../Exarion/Assets/Scripts/Managers/ExtensionMethods.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/../GeometryTestLab/Assets/Scripts/GpuGeometry/NewVine.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/../VAT_Converter/Assets/Scripts/MeshExtensions.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/../VAT_Converter/Assets/Scripts/VAT.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/../lvl99-gamejam/Assets/Scripts/MatchDrawing/MatchDrawing.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/8f06425e63004caf99a79845675f751e46a800/bf/7dbc1b61/ThrowHelper.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/bdd20210bb844b2e88e1149ea99da5ef16c200/6b/298aa147/GraphicsBuffer.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/bdd20210bb844b2e88e1149ea99da5ef16c200/e9/99bbd2fc/Object.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OsGilLBKfG3xD3lXndSzQtnXce\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Discover.Launch.Via.Unity&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;rider.run.widget.enabled.cache&quot;: &quot;false&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Attach to Unity Editor.Attach to Unity Editor\">\r\n    <configuration name=\"UnitTests (batch mode)\" type=\"RunUnityExe\" factoryName=\"Unity Executable\">\r\n      <option name=\"EXE_PATH\" value=\"C:\\Program Files\\Unity\\Hub\\Editor\\2022.2.1f1\\Editor\\Unity.exe\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"-runTests -batchmode -projectPath C:\\UnityProjects\\CaveGeneration -testResults Logs/results.xml -testPlatform EditMode -debugCodeOptimization\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"C:\\UnityProjects\\CaveGeneration\" />\r\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Attach to Unity Editor &amp; Play\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"UNITY_ATTACH_AND_PLAY\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Attach to Unity Editor\" type=\"UNITY_DEBUG_RUN_CONFIGURATION\" factoryName=\"Unity Debug\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\" port=\"50000\" address=\"localhost\">\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"listenPortForConnections\" value=\"false\" />\r\n      <option name=\"pid\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3b950575-0ebb-40b1-b163-92127e3e1ccf\" name=\"Changes\" comment=\"initial commit\" />\r\n      <created>1682342008486</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682342008486</updated>\r\n      <workItem from=\"1682342022596\" duration=\"303000\" />\r\n      <workItem from=\"1682352849807\" duration=\"4776000\" />\r\n      <workItem from=\"1682418818213\" duration=\"20653000\" />\r\n      <workItem from=\"1682442713838\" duration=\"6306000\" />\r\n      <workItem from=\"1682687536588\" duration=\"1197000\" />\r\n      <workItem from=\"1683109227366\" duration=\"321000\" />\r\n      <workItem from=\"1683109569437\" duration=\"6190000\" />\r\n      <workItem from=\"1683248919714\" duration=\"690000\" />\r\n      <workItem from=\"1683285761964\" duration=\"11755000\" />\r\n      <workItem from=\"1683382538631\" duration=\"878000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"initial commit\">\r\n      <created>1682342040590</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682342040590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Got basic generation working with chunks and started work on gpu physics\">\r\n      <created>1682470847595</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682470847595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Got infinite chunk generation working\">\r\n      <created>1683197623411</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683197623411</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Got proper raycasting working with my cave terrain\">\r\n      <created>1683208512996</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683208512996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Got fast carving working\">\r\n      <created>1683224688379</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683224688379</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"true\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"EditMode\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\r\n    <MESSAGE value=\"initial commit\" />\r\n    <MESSAGE value=\"Got basic generation working with chunks and started work on gpu physics\" />\r\n    <MESSAGE value=\"Got infinite chunk generation working\" />\r\n    <MESSAGE value=\"Got proper raycasting working with my cave terrain\" />\r\n    <MESSAGE value=\"Got fast carving working\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Got fast carving working\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"DotNet Breakpoints\">\r\n          <url>file://$PROJECT_DIR$/Assets/Scripts/GPUPhysics/GPUPhysics.cs</url>\r\n          <line>165</line>\r\n          <properties documentPath=\"C:\\UnityProjects\\CaveGeneration\\Assets\\Scripts\\GPUPhysics\\GPUPhysics.cs\" initialLine=\"165\" containingFunctionPresentation=\"method 'RayIntersectMesh'\">\r\n            <startOffsets>\r\n              <option value=\"6496\" />\r\n            </startOffsets>\r\n            <endOffsets>\r\n              <option value=\"6510\" />\r\n            </endOffsets>\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"33\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <pin-to-top-manager>\r\n      <pinned-members>\r\n        <PinnedItemInfo parentTag=\"Type#Ray\" memberName=\"index\" />\r\n        <PinnedItemInfo parentTag=\"Type#CaveGenerator+Vertex\" memberName=\"position\" />\r\n      </pinned-members>\r\n    </pin-to-top-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.CaveGeneration/.idea/workspace.xml b/.idea/.idea.CaveGeneration/.idea/workspace.xml
--- a/.idea/.idea.CaveGeneration/.idea/workspace.xml	(revision d1866627d6abfc98119f6723d76e09ababb83f24)
+++ b/.idea/.idea.CaveGeneration/.idea/workspace.xml	(date 1683387284036)
@@ -5,15 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3b950575-0ebb-40b1-b163-92127e3e1ccf" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_03_05_2023_15_34__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_03_05_2023_15_34__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_04_05_2023_10_53__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/shelf/Uncommitted_changes_before_Update_at_04_05_2023_10_53__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.CaveGeneration/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assets/Scenes/SampleScene.unity" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scenes/SampleScene.unity" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assets/Scripts/GPUPhysics/GPUPhysics.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/GPUPhysics/GPUPhysics.cs" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Resources/GPUPhysicsShader.compute" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Resources/GPUPhysicsShader.compute" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Resources/SDFCarver.compute" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Resources/SDFCarver.compute" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -22,6 +15,7 @@
   </component>
   <component name="HighlightingSettingsPerFile">
     <setting file="file://$PROJECT_DIR$/../BetterDisintegration/Assets/Scripts/Library/MeshExtensions.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://C:/UnityProjects/CaveGeneration/Assets/Scripts/CaveGeneration/CaveGeneratorManager.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CavePhysicsManager.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/CaveGeneration/CaveTerrainCarver.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Assets/Scripts/ExtensionMethods.cs" root0="FORCE_HIGHLIGHTING" />
@@ -111,7 +105,7 @@
       <workItem from="1683109569437" duration="6190000" />
       <workItem from="1683248919714" duration="690000" />
       <workItem from="1683285761964" duration="11755000" />
-      <workItem from="1683382538631" duration="878000" />
+      <workItem from="1683382538631" duration="2996000" />
     </task>
     <task id="LOCAL-00001" summary="initial commit">
       <created>1682342040590</created>
@@ -148,7 +142,14 @@
       <option name="project" value="LOCAL" />
       <updated>1683224688379</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="work on optimized multiple rayscasting">
+      <created>1683383598953</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1683383598953</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -175,7 +176,8 @@
     <MESSAGE value="Got infinite chunk generation working" />
     <MESSAGE value="Got proper raycasting working with my cave terrain" />
     <MESSAGE value="Got fast carving working" />
-    <option name="LAST_COMMIT_MESSAGE" value="Got fast carving working" />
+    <MESSAGE value="work on optimized multiple rayscasting" />
+    <option name="LAST_COMMIT_MESSAGE" value="work on optimized multiple rayscasting" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
